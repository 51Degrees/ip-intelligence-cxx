name: Build and Test IP Intelligence C++

pr:
- master
- develop

trigger: none

stages:

- stage: Windows
  pool:
    name: Hosted VS2017
    demands:
    - msbuild
    - vstest

  jobs:
 
  - job: Build_VisualStudio

    timeoutInMinutes: 120

    steps:

    - checkout: self
      submodules: recursive
      lfs: true
      persistCredentials: true

    - powershell: |
        git lfs install
        ls
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs fetch
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs checkout
        ls
      workingDirectory: 'ip-intelligence-data'
      displayName: 'Fetch LFS Data Files'

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: 'VisualStudio/IpIntelligence.sln'
        feedsToUse: 'select'
        vstsFeed: 'd2431f86-c1e6-4d8b-8d27-311cf3614847'

    - task: MSBuild@1
      displayName: 'Build Visual Studio Solution x64'
      inputs:
        solution: 'VisualStudio/IpIntelligence.sln'
        msbuildArchitecture: x64
        platform: x64
        configuration: Release
        clean: true

  - job: Build_And_Test_Ip_Intelligence

    timeoutInMinutes: 120

    steps:

    - checkout: self
      submodules: recursive
      lfs: true
      persistCredentials: true

    - powershell: |
        git lfs install
        ls
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs fetch
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs checkout
        ls
      workingDirectory: 'ip-intelligence-data'
      displayName: 'Fetch LFS Data Files'

    - task: Bash@3
      displayName: 'Create Build Directory'
      inputs:
        targetType: 'inline'
        script: 'mkdir build'

    - task: CMake@1
      displayName: 'CMake Configure'
      inputs:
        workingDirectory: build
        cmakeArgs: '.. -A x64'

    - task: CMake@1
      displayName: 'CMake Build'
      inputs:
        workingDirectory: build
        cmakeArgs: '--build . --config Release'

- stage: Linux
  jobs:
  - job: Build_And_Test

    strategy:
      matrix:
        ubuntu-18:
          imageName: ubuntu-18.04
        ubuntu-16:
          imageName: ubuntu-16.04
        macOS-10:
          imageName: macOS-10.14

    timeoutInMinutes: 120

    pool:
      vmImage: $(imageName)

    steps:

    - checkout: self
      submodules: recursive
      lfs: true

    - task: Bash@3
      displayName: 'Create Build Directory'
      inputs:
        targetType: 'inline'
        script: 'mkdir build'

    - task: CMake@1
      displayName: 'CMake Configure'
      inputs:
        workingDirectory: build
        cmakeArgs: '..'

    - task: CMake@1
      displayName: 'CMake Build'
      inputs:
        workingDirectory: build
        cmakeArgs: '--build .'