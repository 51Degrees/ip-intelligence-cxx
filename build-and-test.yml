name: Build and Test IP Intelligence C++

pr:
- master
- develop

trigger: none

stages:

- stage: Windows

  jobs:
 
  - job: Build_VisualStudio

    pool:
      vmImage: vs2017-win2016
      demands:
      - msbuild
      - vstest

    timeoutInMinutes: 120

    steps:

    - checkout: self
      submodules: recursive
      lfs: true
      persistCredentials: true

    - powershell: |
        git lfs install
        ls
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs fetch
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs checkout
        ls
        gzip -d Enterprise-ListV41.ipi.gz
        ls
        mv -p Enterprise-ListV41.ipi 51Degrees-LiteV4.1.ipi
        ls
      workingDirectory: 'ip-intelligence-data'
      displayName: 'Fetch LFS Data Files'

    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: 'VisualStudio/IpIntelligence.sln'
        feedsToUse: 'select'
        vstsFeed: 'd2431f86-c1e6-4d8b-8d27-311cf3614847'

    - task: MSBuild@1
      displayName: 'Build Visual Studio Solution x64'
      inputs:
        solution: 'VisualStudio/IpIntelligence.sln'
        msbuildArchitecture: x64
        platform: x64
        configuration: Release
        clean: true

    - bash: './FiftyOne.IpIntelligence.Tests.exe --gtest_filter="-*TestOfflineProcessing*" --gtest_catch_exceptions=1 --gtest_break_on_failure=0 --gtest_output=xml:testoutput.xml'
      workingDirectory: VisualStudio/FiftyOne.IpIntelligence.Tests/x64/Release
      failOnStderr: true
      displayName: 'Run IP Intelligence Tests'

    - task: PublishTestResults@2
      condition: true
      inputs:
        testResultsFormat: 'JUnit'
        testRunTitle: 'Visual Studio x64 IP Intelligence'
        testResultsFiles: 'VisualStudio\FiftyOne.IpIntelligence.Tests\x64\Release\testoutput.xml'

  - job: Build_And_Test_Ip_Intelligence

    strategy:
      matrix:
        microsofthosted:
          poolName: Azure Pipelines
          imageName: windows-2019
        selfhosted:
          poolName: Hosted VS2017
          imageName:

    timeoutInMinutes: 120

    pool:
      name: $(poolName)
      vmImage: $(imageName)

    steps:

    - checkout: self
      submodules: recursive
      lfs: true
      persistCredentials: true

    - powershell: |
        git lfs install
        ls
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs fetch
        git -c http.https://51degrees.visualstudio.com.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" lfs checkout
        ls
        gzip -d Enterprise-ListV41.ipi.gz
        ls
        mv -p Enterprise-ListV41.ipi 51Degrees-LiteV4.1.ipi
        ls
      workingDirectory: 'ip-intelligence-data'
      displayName: 'Fetch LFS Data Files'

    - task: Bash@3
      displayName: 'Create Build Directory'
      inputs:
        targetType: 'inline'
        script: 'mkdir build'

    - task: CMake@1
      displayName: 'CMake Configure'
      inputs:
        workingDirectory: build
        cmakeArgs: '.. -A x64'

    - task: CMake@1
      displayName: 'CMake Build'
      inputs:
        workingDirectory: build
        cmakeArgs: '--build . --config Release'

    - bash: 'ctest -R ".*Ipi.*" -E ".*TestOfflineProcessing.*" -T test --no-compress-output'
      workingDirectory: build
      failOnStderr: true
      displayName: 'Run Tests'

    - task: PublishTestResults@2
      condition: true
      inputs:
        testResultsFormat: 'CTest'
        testRunTitle: '${{ variables.vmImage }} CTest IP Intelligence'
        testResultsFiles: '**/Test.xml'

- stage: Linux
  jobs:
  - job: Build_And_Test

    strategy:
      matrix:
        ubuntu-18:
          imageName: ubuntu-18.04
        ubuntu-16:
          imageName: ubuntu-16.04

    timeoutInMinutes: 120

    pool:
      vmImage: $(imageName)

    steps:

    - checkout: self
      submodules: recursive
      lfs: true

    - task: Bash@3
      displayName: 'Extract data file'
      inputs:
        targetType: 'inline'
        script: |
          ls
          gzip -d Enterprise-ListV41.ipi.gz
          ls
          mv -p Enterprise-ListV41.ipi 51Degrees-LiteV4.1.ipi
          ls
        workingDirectory: 'ip-intelligence-data'

    - task: Bash@3
      displayName: 'Create Build Directory'
      inputs:
        targetType: 'inline'
        script: 'mkdir build'

    - task: CMake@1
      displayName: 'CMake Configure'
      inputs:
        workingDirectory: build
        cmakeArgs: '..'

    - task: CMake@1
      displayName: 'CMake Build'
      inputs:
        workingDirectory: build
        cmakeArgs: '--build .'

    - bash: 'ctest -E ".*TestOfflineProcessing.*" -T test --no-compress-output'
      workingDirectory: build
      failOnStderr: true
      displayName: 'Run Tests'

    - task: PublishTestResults@2
      condition: true
      inputs:
        testResultsFormat: 'CTest'
        testRunTitle: '${{ variables.vmImage }} CTest'
        testResultsFiles: '**/Test.xml'